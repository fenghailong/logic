<style lang="less">
  .page {
    background-color: #eee;
    .logic-index-search {
      position: relative;
      .van-search {
        height: 60px;
      }
      .logic-index-search-list {
        position: absolute;
        top: 60px;
        display: flex;
        flex-direction: column;
        background-color: #FFFFFF;
        padding: 0 20px;
        width: 100%;
        z-index: 100;
        .logic-index-search-item {
          font-size: 16px;
          color: #666;
          margin-top: 5px;
          padding: 10px;
        }
      }
    }
    .logic-index-box {
      padding: 0 10px;
    }
    .logic-index-box-hot {
      margin: 10px 0;
      padding: 10px;
      background-color: #FFFFFF;
      border-radius: 5px;
      .logic-index-box-hot-title {
        font-size: 16px;
        font-weight: middle;
        padding: 0 10px;
      }
      .logic-index-box-hot-content {
        margin-top: 10px;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
      }
      .logic-index-box-hot-content-item {
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        padding: 5px 20px;
        background-color: #2fcebe;
        margin-bottom: 10px;
        font-size: 16px;
        color: #FFFFFF;
        border-radius: 10px;
        margin-right: 20px;
        width: 30%;
        height: 60px;
        text {
          font-size: 14px;
        }
      }
    }
  }

</style>
<template>
  <div class="page">
    <div class="logic-index-search">
      <van-search value="{{ value }}" shape="round" background="#387ffb" placeholder="请输入搜索词语" @change="searchChange">
      </van-search>
      <div class="logic-index-search-list">
        <div class="logic-index-search-item" v-for="(item, index) in searchList" :key="index"  @click.stop="sureCompany(item._id)">
            {{item.name}}
        </div>
      </div>
    </div>
    <van-notice-bar scrollable left-icon="volume-o" text="逻辑填空1.0正式上线(免费,更新中)" />
    <div class="logic-index-box">
      <div class="logic-index-box-hot">
        <div class="logic-index-box-hot-title">热门词库</div>
        <div class="logic-index-box-hot-content">
          <div class="logic-index-box-hot-content-item" @click="toDetail('国考高频成语', words.countryHotWordsCount)">
            <div>国考高频成语</div>
            <text>{{words.countryHotWordsCount}} 词</text>
          </div>
          <div class="logic-index-box-hot-content-item" @click="toDetail('国考历年成语', words.countryCount)">
            <div>国考历年成语</div>
            <text>{{words.countryCount}} 词</text>
          </div>
          <div class="logic-index-box-hot-content-item" style="background-color:#fb9b6c" @click="toDetail('公考高频成语', words.publicExamHotWordsCount)">
            <div>公考高频成语</div>
            <text>{{words.publicExamHotWordsCount}} 词</text>
          </div>
          <!-- <div class="logic-index-box-hot-content-item" style="background-color:#fb9b6c" @click="toDetail('公考高频实词', words.publicExamShotHotWordsCount)">
            <div>公考高频实词</div>
            <text>{{words.publicExamShotHotWordsCount}} 词</text>
          </div> -->
        </div>
      </div>
      <div class="logic-index-box-hot">
        <div class="logic-index-box-hot-title">申论积累</div>
        <div class="logic-index-box-hot-content">
          <div class="logic-index-box-hot-content-item" @click="toDetail('人物素材', personCount)">
            <div>人物素材</div>
            <text>{{personCount}} 个</text>
          </div>
        </div>
      </div>
      <div class="logic-index-box-hot">
        <div class="logic-index-box-hot-title">即将上线</div>
        <div class="logic-index-box-hot-content">
          <div class="logic-index-box-hot-content-item">
            <div>高频实词</div>
            <text>0 词</text>
          </div>
          <div class="logic-index-box-hot-content-item">
            <div>申论金句</div>
            <text>0 句</text>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>
<config>
  {
    navigationBarTitleText: '逻辑填空',
    enablePullDownRefresh: true,
    usingComponents: {
      "van-search": "../../libs/vant/search/index",
      "van-notice-bar": "../../libs/vant/notice-bar/index",
      "van-tag": "../../libs/vant/tag/index",
    }
  }
</config>
<script>
  import wepy from '@wepy/core'
  import { getWordsCount, importWords, refreshSynonym, addWordsList, getWAllList } from '@/api/words'
  import { getPersonCount } from '@/api/person'
  import eventHub from '@/common/eventHub'
  import store from '@/store'
  import { mapGetters } from '@wepy/x'
  // import syncBadge from '@/mixins/sync-badge'
  import { importData } from '@/utils/import'
  wepy.page({
    store,
    // mixins: [ syncBadge ],
    data: {
      // 词语数量
      words: [],
      // 申论人物素材数量
      personCount: 0,
      // 是否在加载中
      isLoading: false,

      searchList: [],
      listData: []
    },
    computed: {
      ...mapGetters([ 'isLoggedIn' ])
    },
    async onLoad() {
      // let data = await addWordsList(importData)
      // let data1 = await importWords(importData)
      // let data2 = await refreshSynonym(importData)
      await this.$store.dispatch('login')
      await this.getCount()
      this.getListData()
    },
    async onPullDownRefresh() {
      await this.getCount()
      wx.stopPullDownRefresh()
    },
    methods: {
      // 获取词语数量
      async getCount() {
        wx.showLoading({title: '加载中'})
        // 请求话题列表接口
        const wordsCount = await getWordsCount()
        const personCount = await getPersonCount()
        this.personCount = personCount.result.personCount
        this.words = wordsCount.result
        wx.hideLoading()
      },
      toDetail (type, count) {
        if (this.isLoggedIn) {
          wx.navigateTo({
            url: `/pages/index/detail?type=${type}&count=${count}`,
          })
        }
      },
      searchChange (e) {
         //执行函数
        let value = e.$wx.detail
        this.searchList=[]
        if (value) {
          this.listData.forEach(i=>{
            //判断遍历是否包含输入字符
            if(i.name.indexOf(value)!=-1){
              this.searchList.push(i)
            }
          })
        }
      },
      //获取搜索列表函数（这里是模拟数据）
      async getListData() {
        let data = await getWAllList()
        this.listData = data.result.allWords
      },
      sureCompany(id) {
        wx.navigateTo({
          url: `/pages/index/searchDetail?_id=${id}`,
        })
      }
    },
    onShareAppMessage() {
      return {
        title: '逻辑填空-你的好助手',
        path: '/pages/index/index'
      }
    },
    onShareTimeline() {
      return {
        title: '逻辑填空-你的好助手',
        query: '/pages/index/index'
      }
    }

  })
</script>
