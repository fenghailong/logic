<style lang="less">
.page{
  background-color: #F5F7FA;
  padding-bottom: 80px;
  .logic-index-title {
    //position: relative;
    //position: fixed;
    position: sticky;
    padding: 0 15px;
    margin-bottom: 20px;
    .logic-index-title-box {
      padding: 47px 0 20px;
      background: #FFFFFF;
      border-radius: 10px;
      position: relative;
    }
    .logic-index-title-header {
      height: 25px;
      background: linear-gradient(90deg, #E0EBFF 0%, rgba(255,255,255,0) 100%);
      border-radius: 10px 10px 0px 0px;
      position: absolute;
      top: 3px;
      left: 3px;
      right: 3px;
      display: flex;
      align-items: center;
      .logic-index-title-text {
        font-size: 11px;
        font-family: PingFangSC, PingFang SC;
        font-weight: 500;
        color: #3C7CFC;
        line-height: 1;
        flex: 1;
        padding-left: 10px;
      }
      .logic-index-title-collect-icon {
        width: 20px;
        height: 20px;
        padding-right: 10px;
        image {
          width: 20px;
          height: 20px;
        }
      }
    }
    .logic-index-title-name {
      display: flex;
      align-items: center;
      justify-content: center;
      .logic-index-title-name-list {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 17px;
        font-weight: 500;
        color: #333333;
        line-height: 17px;
        .logic-index-title-name-idom {
          padding: 0 20px;
        }
      }
    }
  }
  .logic-index-box {
    padding: 0 15px 10px;
    .logic-index-item {
      background-color: #fff;
      border-radius: 10px;
      padding: 20px 15px;
      .logic-index-item-header {
        display: flex;
        align-items: center;
        .logic-index-item-header-line {
          width: 3px;
          height: 10px;
          background: #FFA124;
          border-radius: 2px;
          margin-right: 10px;
        }
        .logic-index-item-header-text {
          font-size: 15px;
          font-family: PingFangSC, PingFang SC;
          font-weight: 500;
          color: #333333;
          line-height: 1;
        }
      }
      .logic-index-item-synonym {
        display: flex;
        align-items: flex-start;
        .logic-index-item-synonym-list {
          display: flex;
          flex-direction: column;
          font-size: 14px;
          width: 100%;
          .logic-index-item-synonym-item {
            padding: 15px 0;
            border-bottom: 1px solid #EEEEEE;
            .logic-index-item-synonym-item-word {
              display: flex;
              align-items: flex-start;
              .logic-index-item-synonym-item-name {
                flex: 0 0 70px;
                font-family: PingFangSC, PingFang SC;
                font-weight: 500;
                color: #3C7CFC;
              }
              .logic-index-item-synonym-item-implication {
                font-weight: 400;
                color: #333333;
              }
            }
            .logic-index-item-synonym-item-setence {
              font-family: PingFangSC, PingFang SC;
              font-weight: 400;
              color: #333333;
              line-height: 25px;
              margin-top: 10px;
            }
          }
          .logic-index-item-synonym-item:nth-last-child(1){
            border-bottom: none;
            padding-bottom: 0;
          }
        }
      }
    }
  }
  .logic-index-list-footer {
    display: flex;
    align-items: center;
    justify-content: space-around;
    margin-top: 30px;
    position: fixed;
    left: 15px;
    right: 15px;
    bottom: 20px;
    .van-button {
      width: 165px;
      height: 40px;
    }
  }
  .logic-index-note {
    padding: 0 15px;
    .logic-index-note-box {
      background-color: #fff;
      border-radius: 10px;
      padding: 20px 15px;
    }
    .logic-index-note-header {
      display: flex;
      align-items: center;
      .logic-index-note-header-line {
        width: 3px;
        height: 10px;
        background: #FFA124;
        border-radius: 2px;
        margin-right: 10px;
      }
      .logic-index-note-header-text {
        font-size: 15px;
        font-family: PingFangSC, PingFang SC;
        font-weight: 500;
        color: #333333;
        line-height: 1;
        flex: 1;
      }
      .logic-index-note-icon {
        width: 20px;
        height: 20px;
        image {
          width: 20px;
          height: 20px;
        }
      }
    }
    .logic-index-note-content {
      margin-top: 10px;
      font-size: 14px;
      font-family: PingFangSC, PingFang SC;
      font-weight: 400;
      color: #333333;
    }
  }
  .logic-index-note-popup {
    padding: 20px 15px;
    .logic-index-note-title {
      font-size: 16px;
      font-family: PingFangSC, PingFang SC;
      font-weight: 500;
      color: #333333;
      text-align: center;
    }
    .logic-index-note-button {
      margin-top: 20px;
      .van-button {
        width: 100%;
      }
    }
  }
  .logic-index-list-popup-list {
    padding: 20px 40px 10px;
    overflow: auto;
    .logic-index-list-popup-item {
      display: flex;
      align-items: center;
      padding: 10px 0;
      border-bottom: 1px solid #eee;
      .logic-index-list-popup-index {
        margin-right: 50px;
        color: #2fcebe;
      }
      .logic-index-list-popup-words {
        flex: 1;
      }
      .logic-index-list-popup-words-title {
        flex: 1;
        font-size: 14px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: inline-block;
        max-width: 4em;
      }
    }
  }
}
</style>
<template>
  <div class="page">
    <word-group-bar :total="total" :currentIndex="currentIndex" :isCustomIcon="false" @btnClick="btnClick($event)"></word-group-bar>
    <div class="logic-index-title" style="top:{{navBarHeight + 10}}px">
      <div class="logic-index-title-box">
        <div class="logic-index-title-header">
          <div class="logic-index-title-text">已有{{wordGroupDetail.collectCount}}人收藏</div>
          <div class="logic-index-title-collect-icon" @click="collect">
            <image v-if="wordGroupDetail.isCollect" src="../../../assets/images/collect-icon.png" />
            <image v-else src="../../../assets/images/nocollect-icon.png" />
          </div>
        </div>
        <div class="logic-index-title-name">
          <div class="logic-index-title-name-list" v-if="wordGroupDetail.connectiveList.length === 2">
            <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[0].name}}</div>
            <div class="logic-index-title-name-idom">·</div>
            <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[1].name}}</div>
          </div>
          <div class="logic-index-title-name-list" v-else-if="wordGroupDetail.connectiveList.length === 3">
            <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[0].name}}</div>
            <div class="logic-index-title-name-idom">·</div>
            <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[1].name}}</div>
            <div class="logic-index-title-name-idom">·</div>
            <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[2].name}}</div>
          </div>
          <div v-else-if="wordGroupDetail.connectiveList.length === 4">
            <div class="logic-index-title-name-list" style="margin-bottom: 20px">
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[0].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[1].name}}</div>
            </div>
            <div class="logic-index-title-name-list">
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[2].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[3].name}}</div>
            </div>
          </div>
          <div v-else-if="wordGroupDetail.connectiveList.length === 5">
            <div class="logic-index-title-name-list" style="margin-bottom: 20px">
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[0].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[1].name}}</div>
            </div>
            <div class="logic-index-title-name-list">
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[2].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[3].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[4].name}}</div>
            </div>
          </div>
          <div v-else-if="wordGroupDetail.connectiveList.length === 6">
            <div class="logic-index-title-name-list" style="margin-bottom: 20px">
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[0].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[1].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[2].name}}</div>
            </div>
            <div class="logic-index-title-name-list">
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[3].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[4].name}}</div>
              <div class="logic-index-title-name-idom">·</div>
              <div class="logic-index-title-name-text">{{wordGroupDetail.connectiveList[5].name}}</div>
            </div>
          </div>
        </div>
      </div>

    </div>
    <div class="logic-index-box">
      <div class="logic-index-item">
        <div class="logic-index-item-header">
          <div class="logic-index-item-header-line"></div>
          <div class="logic-index-item-header-text">词意辨析</div>
        </div>
        <div class="logic-index-item-synonym">
          <div class="logic-index-item-synonym-list">
            <div class="logic-index-item-synonym-item" v-for="(item, index) in wordGroupDetail.connectiveList" :key="index">
              <div class="logic-index-item-synonym-item-word">
                <div class="logic-index-item-synonym-item-name">{{item.name}}：</div>
                <div class="logic-index-item-synonym-item-implication">{{item.implication}}</div>
              </div>
              <div class="logic-index-item-synonym-item-setence" v-if="item.sentence.content">例句：{{item.sentence.content}}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div v-if="notes && notes.content" class="logic-index-note">
      <div class="logic-index-note-box">
        <div class="logic-index-note-header">
          <div class="logic-index-note-header-line"></div>
          <div class="logic-index-note-header-text">我的笔记</div>
          <div class="logic-index-note-icon" @click="showNotePopup">
            <image src="../../../assets/images/add-note.png" />
          </div>
        </div>
        <div class="logic-index-note-content">{{notes.content}}</div>
      </div>
    </div>
    <div class="logic-index-list-footer">
      <van-button round type="info" @click="previousWord">上一个</van-button>
      <van-button round type="info" @click="nextWord">下一个</van-button>
    </div>
    <van-popup @click-overlay="clickOverlay" :show="showPopup" position="bottom" round>
      <div class="logic-index-list-popup-list" :style="{ height: '70vh' }">
        <div class="logic-index-list-popup-item" v-for="(item, index) in allList" :key="index" @click="toWords(item.pro_id)">
          <div class="logic-index-list-popup-index">第{{index + 1}}组</div>
          <div class="logic-index-list-popup-words">{{item.name}}</div>
          <van-tag type="primary" size="medium">已学</van-tag>
        </div>
      </div>
    </van-popup>
    <van-popup @click-overlay="noteClickOverlay" :show="noteShowPopup" round>
      <div class="logic-index-note-popup" :style="{ width: '80vw' }">
        <div class="logic-index-note-title">记笔记</div>
        <div class="logic-index-note-input">
          <van-field
            :value="currentNote"
            type="textarea"
            placeholder="请输入笔记"
            maxlength="500"
            show-word-limit
            @change="noteChange"
            :autosize="{maxHeight: 100, minHeight: 100 }"
          />
        </div>
        <div class="logic-index-note-button">
          <van-button color="#4755EB" round @click="doNotes">记笔记</van-button>
        </div>
      </div>
    </van-popup>
  </div>
</template>
<config>
  {
    navigationBarTitleText: '词语辨析',
    navigationStyle: 'custom',
    navigationBarTextStyle: 'black',
    navigationBarBackgroundColor: '#FFFFFF',
    usingComponents: {
      "van-rate": "../../../libs/vant/rate/index",
      "van-tag": "../../../libs/vant/tag/index",
      "van-button": "../../../libs/vant/button/index",
      "van-popup": "../../../libs/vant/popup/index",
      "van-field": "../../../libs/vant/field/index",
      "word-group-bar": "~@/components/word-group-bar"
    }
  }
</config>
<script>
  import wepy from '@wepy/core'
  import store from '@/store'
  import { mapGetters } from '@wepy/x'
  import eventHub from '@/common/eventHub'
  import { getWordGroupDetail } from '@/api/wordGroup'
  import { addNotes, getNotes, updateNotes } from '@/api/knowledgeModule'
  import { addCollection, deleteCollection, getCollectionListByType } from '@/api/collect'

  wepy.page({
    store,
    computed: {
      // 用户信息
      ...mapGetters(['_id'])
    },
    data: {
      allList: [],
      showPopup: false,
      noteShowPopup: false, // 笔记弹框
      notes: {}, // 笔记对象
      currentNote: '', //当前笔记
      wordGroupDetail: {},
      currentWordGroup_id: '',
      type: '',
      navBarHeight: 0,
      total: 0,
      currentIndex: 0
    },
    async onLoad(options) {
      this.navBarHeight = this.$app.$options.globalData.navBarHeight
      this.type = options.type
      wx.showLoading({title: '加载中'})
      await this.getCollectionList()
      // this.allList = JSON.parse((decodeURIComponent(options.wordGroupList)))
      await this.getWordGroupDetail(this.currentWordGroup_id)
      wx.hideLoading()
    },
    methods: {
      async getCollectionList () {
        let options = {
          user_id: this._id,
          type: this.type
        }
        wx.showLoading({title: '加载中'})
        let result = await getCollectionListByType(options)
        this.allList = result.result.data.list
        this.total = this.allList.length
        this.currentWordGroup_id = this.allList[0].pro_id
        wx.hideLoading()
        console.log(this.allList)
      },
      // 收藏
      collect () {
        if (this.wordGroupDetail.isCollect){
          deleteCollection({
            pro_id: this.wordGroupDetail._id,
            user_id: this._id
          })
          this.wordGroupDetail.isCollect = false
          this.wordGroupDetail.collectCount -= 1
        } else {
          addCollection({
            pro_id: this.wordGroupDetail._id,
            user_id: this._id,
            type: String(this.type),
          })
          this.wordGroupDetail.isCollect = true
          this.wordGroupDetail.collectCount += 1
        }
      },
      btnClick (type) {
        if (type === 'addnote') {
          this.noteShowPopup = true
        } else if (type === 'viewlist') {
          this.showPopup = true
        }
      },
      // 获取单个词语
      async getWordGroupDetail(word_id) {
        let result = await getWordGroupDetail({
          user_id: this._id,
          word_group_id: word_id,
          word_group_type: this.type
        })
        this.wordGroupDetail = result.result
        console.log(this.wordGroupDetail, 'details')
        this.notes = {}
        await this.getNote()
        this.currentWordGroup_id = this.wordGroupDetail._id
        let index = this.allList.findIndex((item) => item.pro_id == this.currentWordGroup_id)
        this.currentIndex = index + 1
      },
      async nextWord () {
        let nextIndex = 0
        let index = this.allList.findIndex((item) => item.pro_id == this.currentWordGroup_id)
        nextIndex = index + 1
        if (nextIndex > (this.allList.length - 1)) {
          wx.showToast({
            title: '已经是最后一个了',
            icon: 'success'
          })
        } else {
          wx.showLoading({title: '加载中'})
          await this.getWordGroupDetail(this.allList[nextIndex].pro_id)
          wx.hideLoading()
        }
      },
      async previousWord () {
        let previousIndex = 0
        let index = this.allList.findIndex((item) => item.pro_id == this.currentWordGroup_id)
        previousIndex = index - 1
        if (previousIndex < 0) {
          wx.showToast({
            title: '前面已经没有了',
            icon: 'success'
          })
        } else {
          wx.showLoading({title: '加载中'})
          await this.getWordGroupDetail(this.allList[previousIndex].pro_id)
          wx.hideLoading()
        }
      },
      async toWords (id) {
        this.showPopup = false
        await this.getWordGroupDetail(id)
      },
      async showListPopup () {
        this.showPopup = !this.showPopup
      },
      clickOverlay () {
        this.showPopup = false
      },
      async getNote () {
        wx.showLoading({title: '加载中'})
        let options = {
          module_id: this.wordGroupDetail._id,
          user_id: this._id
        }
        let data = await getNotes(options)
        this.notes = data.result.data[0]
        this.currentNote = this.notes ? this.notes.content : ''
        wx.hideLoading()
      },
      async doNotes () {
        wx.showLoading({title: '加载中'})
        let options = {
          module_id: this.wordGroupDetail._id,
          user_id: this._id,
          content: this.currentNote
        }
        if (!options.content) {
          wx.showToast({ title: '笔记不能为空' })
          return
        }
        if(this.notes) {
          await updateNotes({
            id: this.notes._id,
            content: this.currentNote
          })
        }else {
          await addNotes(options)
        }
        await this.getNote()
        this.noteShowPopup = false
        wx.hideLoading()
        wx.showToast({ title: '保存成功' })
      },
      noteChange (e) {
        this.currentNote = e.$wx.detail
      },
      showNotePopup () {
        this.noteShowPopup = !this.noteShowPopup
      },
      noteClickOverlay () {
        this.noteShowPopup = false
      }
    }
  })
</script>
