<style lang="less">
.page{
  background-color: #eee;
  .logic-index-box {
    padding: 20px 20px;
    .logic-index-item {
      background-color: #fff;
      height: 100vh;
      border-radius: 10px;
      padding: 0 10px;
      overflow: auto;
      .logic-index-item-name {
        padding: 10px;
        font-size: 20px;
        text-align: center;
      }
      .logic-index-item-introduce-article {
        font-size: 14px;
        padding: 0 10px;
        margin-top: 10px;
        color: #666;
      }
    }
    .logic-index-note-title {
      font-size: 20px;
      padding: 20px 0 0;
      text-align: center;
      font-weight: bold;
    }
    .logic-index-note-list {
      margin-top: 10px;
      background-color: #fff;
      border-radius: 5px;
      padding: 10px 20px;
    }
    .logic-index-note-input {
      margin-top: 20px;
    }
    .logic-index-content-button {
      margin-top: 20px;
      .van-button {
        width: 100%;
      }
    }
  }
}
</style>
<template>
  <div class="page">
    <div class="logic-index-box">
      <div v-if="detail.title" class="logic-index-item">
        <div class="logic-index-item-introduce-article">
          <rich-text nodes="{{ detail.content }}"></rich-text>
        </div>
      </div>
      <van-empty v-else description="每日更新，敬请期待" />
      <div v-if="notesList.length > 0" class="logic-index-note-title">我的笔记积累</div>
      <div v-if="notesList.length > 0" v-for="(item, index) in notesList" :key="index" class="logic-index-note-list"> 
          {{item.content}}
      </div>
      <div class="logic-index-note-input">
        <van-field
          :value="currentNote "
          type="textarea"
          placeholder="请输入笔记"
          autosize
          maxlength="200"
          show-word-limit
          :border="false"
          @change = "noteChange"
        />
      </div>
      <div class="logic-index-content-button">
        <van-button color="#4755EB" round @click="doNotes">记笔记</van-button>
      </div>
    </div>
  </div>
</template>
<config>
  {
    navigationBarTitleText: '哲学概述',
    usingComponents: {
      "van-button": "../../libs/vant/button/index",
      "van-empty": "../../libs/vant/empty/index",
      "van-field": "../../libs/vant/field/index"
    }
  }
</config>
<script>
  import wepy from '@wepy/core'
  import store from '@/store'
  import { mapGetters } from '@wepy/x'
  import eventHub from '@/common/eventHub'
  import { getKnowledgeDetailById, addNotes, getNotes } from '@/api/knowledgeModule'

  wepy.page({
    store,
    computed: {
      // 用户信息
      ...mapGetters(['_id'])
    },
    data: {
      moudleId: '',
      detail: {},
      currentNote: '',
      notesList: []
    },
    async onLoad(options) {
      this.moudleId = options.id
      await this.getKnowledgeDetailByIdData(options.id)
      await this.getNoteList()
      wx.setNavigationBarTitle({title: this.detail.title})
    },
    methods: {
      // 获取模块词语列表
      async getKnowledgeDetailByIdData(options) {
        wx.showLoading({title: '加载中'})
        let result = await getKnowledgeDetailById(options)
        this.detail = result.result.data[0]
        wx.hideLoading()
      },
      noteChange (e) {
        this.currentNote = e.$wx.detail
      },
      async getNoteList () {
        wx.showLoading({title: '加载中'})
        let options = {
          module_id: this.moudleId,
          user_id: this._id
        }
        let data = await getNotes(options)
        this.notesList = data.result.data
        wx.hideLoading()
      },
      async doNotes () {
        wx.showLoading({title: '加载中'})
        let options = {
          module_id: this.moudleId,
          user_id: this._id,
          content: this.currentNote
        }
        await addNotes(options)
        await this.getNoteList()
        this.currentNote = ''
        wx.hideLoading()
      }
    },
    onShareAppMessage () {
      return {
        // 标题是话题标题
        title: '知识要点',
        // 路径为话题详情路径
        path: '/pages/undertaking/detail?id=' + this.moudleId,
      }
    },
  })
</script>
