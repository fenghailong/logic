<style lang="less">
.page{
    background-color: #F5F7FA;
    height: 100%;
    .logic-detail {
      padding-top: 15px;
      padding-bottom: 20px;
    }
    .logic-detail-box {
        padding: 0 15px;
        margin-bottom: 20px;
    }
    .logic-detail-content {
        background-color: #fff;
        border-radius: 10px;
        padding: 20px 15px;
        position: relative;
        .logic-detail-content-icon {
            position: absolute;
            right: 0;
            top: 5px;
            image {
                width: 57px;
                height: 64px;
            }
        }
        .logic-detail-content-title {
            text-align: left;
            font-size: 19px;
            font-family: PingFangSC, PingFang SC;
            font-weight: 500;
            color: #333333;
            line-height: 1;
        }
        .logic-detail-content-describe {
            text-align: left;
            font-size: 15px;
            color: #999999;
            font-weight: 400;
            margin-top: 10px;
            line-height: 1;
        }
        .logic-detail-content-progress {
            margin: 25px 0 10px;
        }
        .logic-detail-content-message {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            margin-bottom: 25px;
            .logic-detail-content-message-practice {
              font-size: 13px;
              color: #333333;
              line-height: 1;
            }
        }
        .logic-detail-content-footer {
            display: flex;
            align-items: center;
            justify-content: space-between;
            .logic-detail-content-button-left {
                .van-button {
                    width: 150px;
                }
                .van-button__text {
                    color: #3C7CFC;
                }
            }
            .logic-detail-content-button-right {
                .van-button {
                    width: 150px;
                }
            }
        }
    }
}
</style>
<template>
    <div class="page">
      <div class="logic-detail">
        <div class="logic-detail-box">
          <div class="logic-detail-content">
            <div class="logic-detail-content-icon">
              <image src="../../assets/images/idom-icon.png" />
            </div>
            <div class="logic-detail-content-title">高频成语</div>
            <div class="logic-detail-content-describe">搜集历年国考、省考等考试中出现的高频成语</div>
            <div class="logic-detail-content-progress">
              <van-progress :percentage="idiomPecent" stroke-width="6" :show-pivot="false" color="#3C7CFC" track-color="#EEF1F6"/>
            </div>
            <div class="logic-detail-content-message">
              <div class="logic-detail-content-message-practice">已学习 {{idiomGroupStudyCount}}/{{idiomGroupList.length}}</div>
              <van-rate readonly value="{{ idiomStarValue }}" style="margin-left: 20px" size="11px" allow-half/>
              <div class="logic-detail-content-message-practice" style="flex: 1;text-align: right">已有{{idiomUserCount}}人学习</div>
            </div>
            <div class="logic-detail-content-footer">
              <van-button class="logic-detail-content-button-left" color="#EDF3FF" round @click="toEvaluation('1')">成语评测</van-button>
              <van-button class="logic-detail-content-button-right" color="#3C7CFC" round @click="toidiomDetail">开始学习</van-button>
            </div>
          </div>
        </div>
        <div class="logic-detail-box">
          <div class="logic-detail-content">
            <div class="logic-detail-content-icon">
              <image src="../../assets/images/word-icon.png" />
            </div>
            <div class="logic-detail-content-title">高频实词</div>
            <div class="logic-detail-content-describe">搜集历年国考、省考等考试中出现的高频实词</div>
            <div class="logic-detail-content-progress">
              <van-progress :percentage="notionalPecent" stroke-width="6" :show-pivot="false" color="#3C7CFC" track-color="#EEF1F6"/>
            </div>
            <div class="logic-detail-content-message">
              <div class="logic-detail-content-message-practice">已学习 {{notionalGroupStudyCount}}/{{notionalGroupList.length}}</div>
              <van-rate readonly value="{{ notionalstarValue }}" style="margin-left: 20px" size="11px" allow-half/>
              <div class="logic-detail-content-message-practice" style="flex: 1;text-align: right">已有{{notionalUserCount}}人学习</div>
            </div>
            <div class="logic-detail-content-footer">
              <van-button class="logic-detail-content-button-left" color="#EDF3FF" round @click="toEvaluation('2')">实词评测</van-button>
              <van-button class="logic-detail-content-button-right" color="#3C7CFC" round @click="tonotionalDetail">开始学习</van-button>
            </div>
          </div>
        </div>
        <div class="logic-detail-box">
          <div class="logic-detail-content">
            <div class="logic-detail-content-icon">
              <image src="../../assets/images/idom-icon.png" />
            </div>
            <div class="logic-detail-content-title">高频成语(老版本)</div>
            <!-- <div class="logic-detail-content-describe" style="padding: 20px 0;">注意：老版本可能会下线废弃！！！！</div> -->
            <div class="logic-detail-content-footer" style="margin-top: 20px">
              <van-button class="logic-detail-content-button-left" color="#EDF3FF" round @click="toEvaluation('1')">成语评测</van-button>
              <van-button class="logic-detail-content-button-right" color="#3C7CFC" round @click="toOldDetail">开始学习</van-button>
            </div>
          </div>
        </div>
      </div>
      <van-dialog id="van-dialog" custom-class="logic-index-content-dialog"/>
      <van-overlay show="{{ showOverlay }}" bind:click="onClickHide" />
    </div>
</template>
<config>
{
    navigationBarTitleText: '高频成语',
    usingComponents: {
        "van-search": "../../libs/vant/circle/index",
        "van-button": "../../libs/vant/button/index",
        "van-rate": "../../libs/vant/rate/index",
        "van-progress": "../../libs/vant/progress/index",
        "van-dialog": "../../libs/vant/dialog/index",
        "van-overlay": "../../libs/vant/overlay/index"
    }
}
</config>
<script>
import wepy from '@wepy/core'
import store from '@/store'
import subscribe from '@/mixins/subscribe.js'
import { mapGetters } from '@wepy/x'
import { getWordGroupCount, getCurrenStudyWordGroupId } from '@/api/wordGroup'
import { getUserCountInfo } from '@/api/user'
import eventHub from '@/common/eventHub'
import Dialog from '../../libs/vant/dialog/dialog';

wepy.page({
mixins: [ subscribe ],
store,
data: {
    studyInfo: {
      allIdiomCount: 0,
      allNotionalCount: 0,
      studyIdiomCount: 0,
      studyNotionalCount: 0,
      idiomStarValue: "0",
      notionalstarValue: "0"
    }, //已学习信息
    idiomUserCount: 0,
    notionalUserCount: 0,
    idiomCurrentId: '',
    notionalCurrentId: '',
    showOverlay: false,
},
// 计算的属性
computed: {
    ...mapGetters(['_id', 'user', 'idiomGroupList', 'notionalGroupList', 'idiomGroupStudyCount', 'notionalGroupStudyCount']),
    idiomStarValue () {
      return ( this.idiomGroupStudyCount/this.idiomGroupList.length * 5 ).toFixed(1)
    },
    idiomPecent () {
      return Number(( this.idiomGroupStudyCount * 100 / this.idiomGroupList.length ).toFixed(0))
    },
    notionalstarValue () {
      return ( this.notionalGroupStudyCount/this.notionalGroupList.length * 5 ).toFixed(1)
    },
    notionalPecent () {
      return  Number(( this.notionalGroupStudyCount * 100 / this.notionalGroupList.length ).toFixed(0))
    }
},
onShow() {
  this.showPrivacy = true
},
onHide() {
  this.showPrivacy = false
},
async onLoad() {
    this.showOverlay = true
    wx.showLoading({title: '加载中'})
    await this.getUserCountInfo()
    if (this.idiomGroupList <= 0 || this.notionalGroupList <= 0) {
      await this.$store.dispatch('getWordGroupList', {
        user_id: this._id
      })
      await this.$store.dispatch('getCurrenStudyWordGroupId', {
        user_id: this._id
      })
    }
    this.showOverlay = false
    wx.hideLoading()
},
methods: {
    // 获取有多少人已学习
    async getUserCountInfo() {
      // 成语
      let isIdiomData = await getUserCountInfo({
        isIdiom: '1'
      })
      // 实词
      let isNotionalData = await getUserCountInfo({
        isNotional: '1'
      })
      this.idiomUserCount = isIdiomData.result.data.count + 52378
      this.notionalUserCount = isNotionalData.result.data.count + 34987
    },
    async toidiomDetail () {
        if (this.user.messageCount < 1) {
            await this.onSubscribe()
        }
        // let wordGroupList = encodeURIComponent(JSON.stringify(this.moveObjectsToFront(this.studyInfo.idiomList, 'from', '2')))
        // let wordGroupList = encodeURIComponent(JSON.stringify(this.studyInfo.idiomList))
        wx.navigateTo({
          url: `/pages/words/newDetail?type=1`,
        })
    },
    async tonotionalDetail () {
        if (this.user.messageCount < 1) {
            await this.onSubscribe()
        }
        if(this.user.isMember !== '1') {
          if (this.notionalGroupStudyCount > 10) {
            Dialog.confirm({
              message: '普通用户可以体验10个实词词组，开通会员任意使用',
              confirmButtonText: '立即开通'
            }).then(async () => {
              wx.navigateTo({
                url: `../member/pages/index`,
              })
            }).catch(() => {
            });
            return
          }
        }
        // let wordGroupList = encodeURIComponent(JSON.stringify(this.moveObjectsToFront(this.studyInfo.notionalList, 'from', '2')))
        // let wordGroupList = encodeURIComponent(JSON.stringify(this.studyInfo.notionalList))
        wx.navigateTo({
          url: `/pages/words/newDetail?type=2`,
        })
    },
    // 数组移动自定义的到最前面
    moveObjectsToFront(arr, property, value) {
      return arr.sort((a, b) => {
        if (a[property] === value) {
          return -1;
        } else if (b[property] === value) {
          return 1;
        } else {
          return 0;
        }
      });
    },
    async toEvaluation (type) {
      if (this.user.messageCount < 1) {
          await this.onSubscribe()
      }
      wx.navigateTo({
          url: `/pages/words/newEvaluation?type=${type}`,
      })
    },
    async toOldDetail () {
        if (this.user.messageCount < 1) {
            await this.onSubscribe()
        }
        wx.navigateTo({
          url: `/pages/words/detail`,
        })
    },
},
onShareAppMessage () {
    return {
      // 标题是话题标题
      title: this.topic.title,
      // 路径为话题详情路径
      path: '/pages/words/list',
    }
},
})
</script>
